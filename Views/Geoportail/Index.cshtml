@{
    ViewData["Title"] = "Carte des Vols - Géoportail";
    Layout = null;
}
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    
    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
          crossorigin=""/>
    
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    
    <style>
        :root {
            --primary: #3498db;
            --secondary: #2c3e50;
            --success: #2ecc71;
            --danger: #e74c3c;
            --light: #ecf0f1;
            --dark: #34495e;
            --gray: #95a5a6;
        }
        
        body {
            font-family: 'Segoe UI', system-ui, sans-serif;
            background-color: #f8f9fa;
            margin: 0;
            padding: 20px;
            color: #333;
        }
        
        .header {
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
            display: flex;
            align-items: center;
        }
        
        .header i {
            color: var(--primary);
            margin-right: 10px;
            font-size: 1.8rem;
        }
        
        .header h1 {
            margin: 0;
            color: var(--dark);
            font-weight: 600;
        }
        
        .main-container {
            display: flex;
            gap: 20px;
            flex-wrap: wrap;
        }
        
        .map-section {
            flex: 2;
            min-width: 300px;
        }
        
        .catalog-section {
            flex: 1;
            min-width: 300px;
            background: white;
            border-radius: 8px;
            padding: 15px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            max-height: 700px;
            overflow-y: auto;
        }
        
        #map {
            height: 650px;
            width: 100%;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            background-color: var(--light);
            border: 1px solid #ddd;
        }
        
        .map-container {
            position: relative;
            margin-bottom: 20px;
        }
        
        .map-controls {
            position: absolute;
            top: 20px;
            right: 20px;
            z-index: 1000;
            background: rgba(255,255,255,0.95);
            padding: 15px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.15);
            width: 280px;
            backdrop-filter: blur(2px);
        }
        
        .map-controls h4 {
            margin-top: 0;
            color: var(--secondary);
            display: flex;
            align-items: center;
            font-size: 1.1rem;
        }
        
        .map-controls h4 i {
            margin-right: 8px;
            color: var(--primary);
        }
        
        .search-box {
            margin-bottom: 10px;
        }
        
        .form-label {
            font-weight: 500;
            margin-bottom: 5px;
            display: block;
            color: var(--dark);
        }
        
        .form-select, .form-control {
            width: 100%;
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            margin-bottom: 10px;
            font-size: 0.9rem;
        }
        
        .btn {
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: all 0.2s;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }
        
        .btn-primary {
            background-color: var(--primary);
            color: white;
        }
        
        .btn-primary:hover {
            background-color: #2980b9;
        }
        
        .btn-sm {
            padding: 5px 10px;
            font-size: 0.8rem;
        }
        
        .btn-success {
            background-color: var(--success);
            color: white;
        }
        
        .btn-success:hover {
            background-color: #27ae60;
        }
        
        .btn i {
            margin-right: 5px;
        }
        
        .flight-info {
            background: white;
            padding: 15px;
            border-radius: 6px;
            margin-top: 15px;
            border-left: 4px solid var(--primary);
            display: none;
        }
        
        .flight-info h5 {
            margin-top: 0;
            color: var(--secondary);
        }
        
        .flight-info p {
            margin: 8px 0;
        }
        
        .flight-info strong {
            color: var(--dark);
        }
        
        .catalog-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }
        
        .catalog-title {
            margin: 0;
            color: var(--secondary);
            display: flex;
            align-items: center;
        }
        
        .flight-table {
            width: 100%;
            border-collapse: collapse;
        }
        
        .flight-table th {
            text-align: left;
            padding: 10px;
            background-color: var(--light);
            color: var(--dark);
            font-weight: 600;
        }
        
        .flight-table td {
            padding: 10px;
            border-bottom: 1px solid #eee;
            vertical-align: middle;
        }
        
        .flight-table tr:hover {
            background-color: #f5f5f5;
        }
        
        .flight-id {
            font-weight: 600;
            color: var(--primary);
        }
        
        .flight-route {
            font-weight: 500;
        }
        
        .flight-seats {
            text-align: center;
        }
        
        .flight-price {
            text-align: right;
            font-weight: 600;
            color: var(--success);
        }
        
        .availability-high {
            color: var(--success);
        }
        
        .availability-medium {
            color: var(--gray);
        }
        
        .availability-low {
            color: var(--danger);
        }
        
        .leaflet-popup-content {
            font-family: 'Segoe UI', system-ui, sans-serif;
            font-size: 0.9rem;
        }
        
        .leaflet-popup-content-wrapper {
            border-radius: 6px;
        }
    </style>
</head>
<body>
    <div class="header">
        <i class="bi bi-geo-alt-fill"></i>
        <h1>@ViewData["Title"]</h1>
    </div>
    
    <div class="main-container">
        <div class="map-section">
            <div class="map-container">
                <div id="map"></div>
                
                <div class="map-controls">
                    <h4><i class="bi bi-funnel"></i> Filtres avancés</h4>
                    
                    <div class="search-box">
                        <label class="form-label">Destination</label>
                        <select class="form-select" id="destination-filter">
                            <option value="">Toutes destinations</option>
                            <option value="New York">New York</option>
                            <option value="Tokyo">Tokyo</option>
                            <option value="Dubai">Dubai</option>
                        </select>
                        
                        <label class="form-label">Places disponibles (min)</label>
                        <input type="number" class="form-control" id="seats-filter" min="1" placeholder="Ex: 10">
                        
                        <label class="form-label">Prix max (€)</label>
                        <input type="number" class="form-control" id="price-filter" min="0" placeholder="Ex: 500">
                        
                        <button class="btn btn-primary" id="search-button">
                            <i class="bi bi-funnel-fill"></i> Appliquer les filtres
                        </button>
                    </div>
                    
                    <div class="flight-info" id="flight-info">
                        <h5><i class="bi bi-info-circle"></i> Détails du vol</h5>
                        <p><strong>ID:</strong> <span id="flight-id"></span></p>
                        <p><strong>Départ:</strong> <span id="flight-departure"></span></p>
                        <p><strong>Destination:</strong> <span id="flight-destination"></span></p>
                        <p><strong>Places:</strong> <span id="flight-seats"></span></p>
                        <p><strong>Prix:</strong> <span id="flight-price"></span></p>
                        <button class="btn btn-success btn-sm" id="book-button">
                            <i class="bi bi-check-lg"></i> Réserver
                        </button>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="catalog-section">
            <div class="catalog-header">
                <h2 class="catalog-title"><i class="bi bi-list-ul"></i> Catalogue des vols</h2>
                <span class="badge">Total : 3 vols</span>
            </div>
            
            <table class="flight-table">
                <thead>
                    <tr>
                        <th>Vol</th>
                        <th>Itinéraire</th>
                        <th>Places</th>
                        <th>Prix</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="flight-catalog">
                    <!-- Rempli dynamiquement -->
                </tbody>
            </table>
        </div>
    </div>

    <!-- Leaflet JS -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
            integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
            crossorigin=""></script>
    
    <!-- Leaflet Arc -->
    <script src="https://unpkg.com/leaflet-arc@1.0.0/leaflet-arc.min.js"></script>

    <script>
        // Vérification que le DOM est chargé
        document.addEventListener('DOMContentLoaded', function() {
            try {
                // Vérification des éléments essentiels
                const mapElement = document.getElementById('map');
                if (!mapElement) {
                    throw new Error("L'élément #map n'a pas été trouvé dans le DOM");
                }

                // Données des vols avec vérification
                const flights = window.flights || [
                    {
                        id: 'AF123',
                        departure: 'Paris (CDG)',
                        destination: 'New York (JFK)',
                        seats: 45,
                        maxSeats: 150,
                        price: 450,
                        coords: [
                            [48.8566, 2.3522],   // Paris
                            [40.7128, -74.0060]  // New York
                        ]
                    },
                    {
                        id: 'AF456',
                        departure: 'Paris (CDG)',
                        destination: 'Tokyo (NRT)',
                        seats: 12,
                        maxSeats: 200,
                        price: 850,
                        coords: [
                            [48.8566, 2.3522],   // Paris
                            [35.6895, 139.6917]  // Tokyo
                        ]
                    },
                    {
                        id: 'AF789',
                        departure: 'Paris (CDG)',
                        destination: 'Dubai (DXB)',
                        seats: 78,
                        maxSeats: 180,
                        price: 600,
                        coords: [
                            [48.8566, 2.3522],  // Paris
                            [25.2048, 55.2708]  // Dubai
                        ]
                    }
                ];

                // Variables globales avec vérification
                let map;
                let flightLayers = [];
                let currentFilteredFlights = [];

                // Initialisation de la carte
                function initMap() {
                    try {
                        map = L.map('map').setView([30, 0], 2);
                        
                        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>',
                            maxZoom: 18
                        }).addTo(map);

                        initFlights();
                        populateFlightCatalog();
                    } catch (error) {
                        console.error("Erreur lors de l'initialisation de la carte:", error);
                        alert("Une erreur est survenue lors du chargement de la carte. Veuillez recharger la page.");
                    }
                }

                // Style des vols
                function getFlightStyle(flight) {
                    if (!flight) return {};
                    
                    const ratio = flight.seats / flight.maxSeats;
                    const color = ratio < 0.3 ? '#e74c3c' : ratio < 0.7 ? '#f39c12' : '#2ecc71';
                    
                    return {
                        color: color,
                        weight: 3,
                        opacity: 0.8,
                        dashArray: ratio < 0.3 ? '10, 10' : null
                    };
                }

                // Initialisation des vols sur la carte
                function initFlights() {
                    if (!map || !Array.isArray(flights)) return;
                    
                    flightLayers = flights.map(flight => {
                        if (!flight?.coords || flight.coords.length !== 2) return null;
                        
                        try {
                            const arc = L.polyline.arc(
                                flight.coords[0], 
                                flight.coords[1],
                                {
                                    vertices: 200,
                                    offset: 10
                                },
                                getFlightStyle(flight)
                            ).addTo(map);
                            
                            arc.bindPopup(`
                                <div style="min-width: 200px">
                                    <h4 style="margin:0 0 5px 0;color:var(--primary)">
                                        <i class="bi bi-airplane"></i> Vol ${flight.id}
                                    </h4>
                                    <p><strong>${flight.departure} → ${flight.destination}</strong></p>
                                    <p>Places: ${flight.seats}/${flight.maxSeats}</p>
                                    <p>Prix: ${flight.price}€</p>
                                </div>
                            `);
                            
                            arc.flightData = flight;
                            
                            arc.on('click', function(e) {
                                try {
                                    showFlightDetails(e.target?.flightData);
                                    highlightFlightInCatalog(e.target?.flightData?.id);
                                } catch (error) {
                                    console.error("Erreur lors du clic sur le vol:", error);
                                }
                            });
                            
                            return arc;
                        } catch (error) {
                            console.error("Erreur lors de la création de l'arc pour le vol", flight.id, error);
                            return null;
                        }
                    }).filter(layer => layer !== null);
                    
                    currentFilteredFlights = [...flights];
                }

                // Remplissage du catalogue des vols
                function populateFlightCatalog() {
                    const catalog = document.getElementById('flight-catalog');
                    if (!catalog) return;
                    
                    catalog.innerHTML = '';
                    
                    flights.forEach(flight => {
                        try {
                            const ratio = flight.seats / flight.maxSeats;
                            const availabilityClass = ratio < 0.3 ? 'availability-low' : 
                                                    ratio < 0.7 ? 'availability-medium' : 'availability-high';
                            
                            const row = document.createElement('tr');
                            row.dataset.flightId = flight.id;
                            row.innerHTML = `
                                <td class="flight-id">${flight.id}</td>
                                <td class="flight-route">${flight.departure} → ${flight.destination}</td>
                                <td class="flight-seats ${availabilityClass}">${flight.seats}/${flight.maxSeats}</td>
                                <td class="flight-price">${flight.price}€</td>
                                <td>
                                    <button class="btn btn-sm btn-primary view-flight" data-id="${flight.id}">
                                        <i class="bi bi-eye"></i> Voir
                                    </button>
                                </td>
                            `;
                            
                            const viewButton = row.querySelector('.view-flight');
                            if (viewButton) {
                                viewButton.addEventListener('click', () => {
                                    try {
                                        const selectedFlight = flights.find(f => f?.id === flight.id);
                                        if (selectedFlight) {
                                            showFlightDetails(selectedFlight);
                                            highlightAndZoomToFlight(selectedFlight);
                                        }
                                    } catch (error) {
                                        console.error("Erreur lors de la visualisation du vol:", error);
                                    }
                                });
                            }
                            
                            catalog.appendChild(row);
                        } catch (error) {
                            console.error("Erreur lors de l'ajout du vol au catalogue:", flight.id, error);
                        }
                    });
                }

                // Affichage des détails d'un vol
                function showFlightDetails(flight) {
                    if (!flight) return;
                    
                    try {
                        const flightInfo = document.getElementById('flight-info');
                        if (!flightInfo) return;
                        
                        document.getElementById('flight-id').textContent = flight.id || 'N/A';
                        document.getElementById('flight-departure').textContent = flight.departure || 'N/A';
                        document.getElementById('flight-destination').textContent = flight.destination || 'N/A';
                        document.getElementById('flight-seats').textContent = `${flight.seats || 0}/${flight.maxSeats || 0}`;
                        document.getElementById('flight-price').textContent = `${flight.price || 0} €`;
                        
                        const bookButton = document.getElementById('book-button');
                        if (bookButton) {
                            bookButton.onclick = function() {
                                alert(`Réservation du vol ${flight.id} (${flight.departure} → ${flight.destination}) initiée.`);
                            };
                        }
                        
                        flightInfo.style.display = 'block';
                    } catch (error) {
                        console.error("Erreur lors de l'affichage des détails du vol:", error);
                    }
                }

                // Surbrillance dans le catalogue
                function highlightFlightInCatalog(flightId) {
                    if (!flightId) return;
                    
                    try {
                        const rows = document.querySelectorAll('#flight-catalog tr');
                        if (!rows) return;
                        
                        rows.forEach(row => {
                            if (row?.dataset?.flightId) {
                                row.style.backgroundColor = row.dataset.flightId === flightId ? '#e3f2fd' : '';
                            }
                        });
                    } catch (error) {
                        console.error("Erreur lors de la surbrillance dans le catalogue:", error);
                    }
                }

                // Zoom sur le vol sélectionné
                function highlightAndZoomToFlight(flight) {
                    if (!map || !flight?.id) return;
                    
                    try {
                        const layer = flightLayers.find(l => l?.flightData?.id === flight.id);
                        if (!layer) return;
                        
                        map.fitBounds(layer.getBounds(), { padding: [50, 50] });
                        layer.fire('click');
                        
                        layer.setStyle({ weight: 5 });
                        setTimeout(() => {
                            layer.setStyle(getFlightStyle(flight));
                        }, 1000);
                    } catch (error) {
                        console.error("Erreur lors du zoom sur le vol:", error);
                    }
                }

                // Filtrage multicritère
                const searchButton = document.getElementById('search-button');
                if (searchButton) {
                    searchButton.addEventListener('click', function() {
                        try {
                            const destination = document.getElementById('destination-filter')?.value?.toLowerCase() || '';
                            const minSeats = parseInt(document.getElementById('seats-filter')?.value) || 0;
                            const maxPrice = parseInt(document.getElementById('price-filter')?.value) || Infinity;
                            
                            currentFilteredFlights = flights.filter(flight => {
                                return (destination === '' || flight.destination?.toLowerCase()?.includes(destination)) &&
                                       (flight.seats >= minSeats) &&
                                       (flight.price <= maxPrice);
                            });
                            
                            flightLayers.forEach(layer => {
                                if (!layer) return;
                                
                                const flight = layer.flightData;
                                const shouldShow = currentFilteredFlights.some(f => f?.id === flight?.id);
                                
                                if (shouldShow) {
                                    map.addLayer(layer);
                                    layer.setStyle(getFlightStyle(flight));
                                } else {
                                    map.removeLayer(layer);
                                }
                            });
                            
                            updateFlightCatalog();
                        } catch (error) {
                            console.error("Erreur lors du filtrage:", error);
                        }
                    });
                }

                // Mise à jour du catalogue après filtrage
                function updateFlightCatalog() {
                    try {
                        const rows = document.querySelectorAll('#flight-catalog tr');
                        if (!rows) return;
                        
                        rows.forEach(row => {
                            const flightId = row?.dataset?.flightId;
                            const isVisible = currentFilteredFlights.some(f => f?.id === flightId);
                            row.style.display = isVisible ? '' : 'none';
                        });
                    } catch (error) {
                        console.error("Erreur lors de la mise à jour du catalogue:", error);
                    }
                }

                // Initialisation
                initMap();
            } catch (error) {
                console.error("Erreur critique lors du chargement de l'application:", error);
                alert("Une erreur critique est survenue. Veuillez recharger la page.");
            }
        });
    </script>
</body>
</html>